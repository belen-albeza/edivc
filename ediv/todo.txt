Cosas por hacer cuanto antes:

- eso de cerrar la ventanita con la X, que se pueda activar/desactivar de alguna forma
- A la hora de implementar la funcion qsort(), hay que introducir una nueva
  funciÃ³n a ediv_export y modificar la toma y compilaciÃ³n de parÃ¡metros en
  expresion.c
- Revisar la text.dll
- Meter fuente nÂº 0 (text.dll)
- AÃ±adir una funciÃ³n al SDK para que la graphics llame a una determinada funciÃ³n cuando
  toque dibujar una determinada z. Algo asÃ­ como fp->Dibuja(), pero en vez de pasarle el
  sprite, que llame a la funciÃ³n de la dll y la deje dibujar a ella en el buffer. PodrÃ¡
  sustituir a fp->Dibuja() en muchos sitios, con lo que se ahorrarÃ­a velocidad y memoria.
- Convertir los scripts (los que se pueda) a Lua, para que sean compatibles entre todas
  las plataformas.
--------

- Hacer desaparecer la tabla procs_s y sustituirla por variables indexadas
- Revisar muchÃ­simo el kernel del stub (compilar cosas, debugear...)
- Actualizar los makefiles y proyectos de KDevelop, y comprobar que rule
  bien bajo Linux
- Hacer unos msgbox decentes para Linux, con X11 a pelo o con una libreria
  pekeÃ±ita (ver error.c del stub)
- Adaptar la rutina de MOTD a Linux <- ya rula?
- Documentarlo todo, ahora tenemos el DOKU, kien no lo tenga ke se lo pida
  a Er_Makina :)


Cosas a implementar a medio plazo:
- Compilar para otros sistemas, como MacOS X (sourceforge rlz)
  lo dificil serÃ¡ encontrar gente pa testear :P
- Trazador
- Macroinstrucciones EML?
  (nota: si se hacen, SE AÃADEN a los opcodes que ya hay, podriamos hacer
  un "nivel 2 de compilacion". de lo ke paso totalmente es de sustituir los
  opcodes actuales, lo que supondria reescribir el compilador y el stub)

- Tablas de strings:

  string str[3,4][20]  <-- inicializa una tabla de strings de 3x4 registros
                           de 20 caracteres cada uno

- Tipos definidos por usuario, como en Fenix <- Â¿?


Cosas ya hechas:

- Archivos de configuracion, ediv.cfg (opciones de compilacion, server de
  MOTD, etc) y priority.cfg (prioridades de DLLs)
- Depurar bestialmente ediv_export y cosas relacionadas (y aÃ±adir funciones
  autoejecutables estilo post_process_buffer)
- Al final todo el asunto de los graficos lo gestionarÃ¡ la graphics.dll, ten-
  drÃ¡ prioridad 512 (mÃ¡xima) y utilizarÃ¡ el sistema de entrypoints
- Meter en el STUB las rutinas de |RooT| y Riseven
- RediseÃ±ar el sistema de stubs para dar cabida a versiones con y sin debugger:

  Win32.dbg
  Win32.rel
  Linux.dbg
  Linux.rel

  Indicar al compilador a quÃ© sistema compilar usando el parÃ¡metro -s, --system
  (compilaciÃ³n cruzada), por defecto el sistema actual
